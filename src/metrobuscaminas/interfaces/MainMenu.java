/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package metrobuscaminas.interfaces;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import javax.swing.JFrame;
import metrobuscaminas.Utils;
import metrobuscaminas.Game;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Clase que maneja el menú principal y sus opciones.
 * 
 * @version 09/03/2025
 * @author Naim
 */
public class MainMenu extends javax.swing.JFrame 
{
    /**
     * Inicializa la ventana del menú principal.
     */
    public MainMenu() {
        initComponents();
        
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setTitle("MetroBuscaminas | Menú principal");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main_title = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        row_count = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        column_count = new javax.swing.JComboBox<>();
        play_button = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        mine_count_range_label = new javax.swing.JLabel();
        mine_count_input = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        search_algorithm = new javax.swing.JComboBox<>();
        load_game_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        main_title.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        main_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        main_title.setText("MetroBuscaminas");
        getContentPane().add(main_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 390, 26));

        jLabel1.setText("Número de filas:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, -1, -1));

        jSeparator1.setToolTipText("");
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 205, 10));

        row_count.setMaximumRowCount(8);
        row_count.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "4", "5", "6", "7", "8", "9", "10" }));
        row_count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                row_countActionPerformed(evt);
            }
        });
        getContentPane().add(row_count, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, 54, -1));

        jLabel2.setText("Número de columnas:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, -1));

        column_count.setMaximumRowCount(8);
        column_count.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "4", "5", "6", "7", "8", "9", "10" }));
        column_count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                column_countActionPerformed(evt);
            }
        });
        getContentPane().add(column_count, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 54, -1));

        play_button.setText("Jugar");
        play_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(play_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 30, 20));

        jLabel3.setText("Número de minas:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, -1));

        mine_count_range_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mine_count_range_label.setText("Rango: 1-9");
        getContentPane().add(mine_count_range_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, 80, 20));

        mine_count_input.setText("2");
        mine_count_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mine_count_inputActionPerformed(evt);
            }
        });
        getContentPane().add(mine_count_input, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 50, -1));

        jLabel4.setText("Algoritmo de búsqueda:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, -1, -1));

        search_algorithm.setMaximumRowCount(2);
        search_algorithm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Depth-First Search", "Breadth-First Search" }));
        getContentPane().add(search_algorithm, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, -1, -1));

        load_game_button.setText("Cargar partida");
        load_game_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_game_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(load_game_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evento cuando se cambia la cantidad de filas seleccionada. 
     * Ajusta el texto que indica el rango válido de minas.
     * @param evt 
     */
    private void row_countActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_row_countActionPerformed
        int max_mine_count = (this.column_count.getSelectedIndex() + 3) * (this.row_count.getSelectedIndex() + 3);
        this.mine_count_range_label.setText("Rango: 1-" + max_mine_count);
    }//GEN-LAST:event_row_countActionPerformed

    /**
     * Evento cuando se cambia la cantidad de columnas seleccionada. 
     * Ajusta el texto que indica el rango válido de minas.
     * @param evt 
     */
    private void column_countActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_column_countActionPerformed
        int max_mine_count = (this.column_count.getSelectedIndex() + 3) * (this.row_count.getSelectedIndex() + 3);
        this.mine_count_range_label.setText("Rango: 1-" + max_mine_count);
    }//GEN-LAST:event_column_countActionPerformed

    /**
     * Evento cuando cambia el input de minas.
     * @param evt 
     */
    private void mine_count_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mine_count_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mine_count_inputActionPerformed

    /**
     * Evento cuando se presiona el botón de Jugar. Inicia la partida.
     * @param evt 
     */
    private void play_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play_buttonActionPerformed
        int row_count = this.row_count.getSelectedIndex() + 3;
        int column_count = this.column_count.getSelectedIndex() + 3;
        int mine_count;
        
        try
        {
            mine_count = Integer.parseInt(this.mine_count_input.getText());
            if(mine_count < 1 || mine_count > (row_count * column_count))
                throw new IllegalArgumentException();
        }
        catch(NumberFormatException e)
        {
            Utils.showMessageError("Minas inválidas", "El número de minas es inválido. Debe ser un número.");
            return;
        }
        catch(IllegalArgumentException e)
        {
            Utils.showMessageError("Minas inválidas", "El número de minas es inválido. Debe estar entre el rango establecido.");
            return;
        }
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addComponentListener(new ComponentAdapter() {
            public void componentShown(ComponentEvent ev)
            {
                MainMenu.this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            }
        });
        
        Game game = new Game(this, row_count, column_count, mine_count, (this.search_algorithm.getSelectedIndex() == 0));
        game.initialize_window(true);
        this.setVisible(false);
        game.show_game_window();
    }//GEN-LAST:event_play_buttonActionPerformed

    /**
     * Evento cuando se presiona el botón de Cargar partida. Carga la partida desde un
     * archivo especificado por el usuario.
     * @param evt 
     */
    private void load_game_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_game_buttonActionPerformed
        Game game = new Game(this, 0, 0, 0, false);
        
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo CSV", "csv");
        chooser.setFileFilter(filter);
        chooser.setMultiSelectionEnabled(false);
        
        int return_val = chooser.showOpenDialog(null);
        if(return_val == JFileChooser.APPROVE_OPTION)
        {
            boolean result = game.load_from_file(chooser.getSelectedFile());
            if(!result)
            {
                Utils.showMessageError("Error de carga de partida", "No se pudo cargar la partida del archivo seleccionado.");
                return;
            }
            
            this.setVisible(false);
            game.show_game_window();
        }
    }//GEN-LAST:event_load_game_buttonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> column_count;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton load_game_button;
    private javax.swing.JLabel main_title;
    private javax.swing.JTextField mine_count_input;
    private javax.swing.JLabel mine_count_range_label;
    private javax.swing.JButton play_button;
    private javax.swing.JComboBox<String> row_count;
    private javax.swing.JComboBox<String> search_algorithm;
    // End of variables declaration//GEN-END:variables
}
